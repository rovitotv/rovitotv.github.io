<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>rovitotv's blog</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2018-05-04T12:00:00-04:00</updated><entry><title>rovitotv.org is switching to github pages</title><link href="/rovitotvorg-is-switching-to-github-pages.html" rel="alternate"></link><published>2018-05-04T12:00:00-04:00</published><updated>2018-05-04T12:00:00-04:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2018-05-04:/rovitotvorg-is-switching-to-github-pages.html</id><summary type="html">&lt;p&gt;Major updates at rovitotv.org, switching to github pages&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been running rovitotv.org blog on a Rapberry Pi for
a while and it has been working with no problems.  But I wanted
to try out github pages and thought moving the site over would
allow me to learn.  So over the weekend I moved the site over
and everything converted without a hitch.  The site is still
powered by Pelican static blog software.  As an additional
side effect I should see improved uptime.  The images, pdf files,
and zip files are hosted from my Google Drive.  My Google Drive
is upgrade to 100 GB because I purchased a Chromebook what a deal.
I plan on blogging about my Chromebook in the near future.&lt;/p&gt;
&lt;p&gt;In some ways I will miss my Raspberry Pi but GitHub pages is
free, I like the GitHub workflow, it increased my GitHub
contribution count, and it is carefree.  The only problem
I ran into was how to work with large images, pdf files,
and zip files with git.  When the repository grew a few
mega bytes in size github.com would time out when pushing
changes.  I got around this by hosting the images, pdf files,
and zip files on Google Drive.  Now the website contains
nothing but text.  Another option is to use git-lfs but
using Google Drive didn't require additional software to be
installed. I recommend checking out github pages + Google
Drive + Pelican for your website.&lt;/p&gt;</content></entry><entry><title>Photos from iPhone are flipped on Website</title><link href="/photos-from-iphone-are-flipped-on-website.html" rel="alternate"></link><published>2018-01-27T22:57:00-05:00</published><updated>2018-01-27T22:57:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2018-01-27:/photos-from-iphone-are-flipped-on-website.html</id><summary type="html">&lt;p&gt;Photos taken with my iPhone were appearing upside down on my website&lt;/p&gt;</summary><content type="html">&lt;p&gt;This has been a frustrating problem for several months with my Pelican
powered Raspberry Pi web server.  I actually thought maybe I was crazy 
because I would visit my website on my computer and everything looked
fine but then if I went to my website with iPhone/iPad some of the 
pictures were upside down.  I tried using Image Magick's convert 
command to rotate the images and that didn't fix the problem.  Finally
tonight I thought I would really dive in and focus trying to figure out
what was going on.  The first thing I tried was different Pelican themes,
maybe a responsive theme would fix my issue?  I could not get the other
themes to work so I started really looking at the images and the exif
data inside of the JPEG images.  After some searching around the web
I discovered that other people had this problem.  Basically if you
take photos with your iPhone with the volume buttons oriented up
that is really upside down.  Instead of rotating the images the iPhone
puts the information into the Exif headers of the JPEG image.  But then
it behaves differently for web browsers (both MacOS and Windows) and
iPhone/iPad.  On MacOS and Windows the images had to be rotated with
the convert and they displayed fine.  But then on iPhone/iPad they
would display upside down after the convert program was used to rotate
them.  Finally I was able to assemble a Python program to rotate the
image if orientation is set then to strip out all the exif data for
presentation on the web.  Here is the program:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ExifTags&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--filename&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;store&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;processing file: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# this code below will rotate the image if it needs to be rotated&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;orientation&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ExifTags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAGS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ExifTags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAGS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Orientation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="n"&gt;exif&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_getexif&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;exif&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rotated image 180&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;exif&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rotated image 270&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;exif&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rotated image 90&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# now we need to strip out the exif all together by saving&lt;/span&gt;
    &lt;span class="c1"&gt;# to a new image without exif&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getdata&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;image_without_exif&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;image_without_exif&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putdata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;image_without_exif&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then be careful that you clear your web cache so the same
upside down image does not reload.  Hopefully this will save
you some time!&lt;/p&gt;</content></entry><entry><title>2017 - 2018 First Lego League District Results for Steve</title><link href="/2017-2018-first-lego-league-district-results-for-steve.html" rel="alternate"></link><published>2018-01-07T19:45:00-05:00</published><updated>2018-01-07T19:45:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2018-01-07:/2017-2018-first-lego-league-district-results-for-steve.html</id><summary type="html">&lt;p&gt;Steve 2017 - 2018 First Lego League District Results at Wright State University&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here are the results from the  &lt;a href="https://www.facebook.com/BoroBots"&gt;Springboro
Robotics&lt;/a&gt; team Steve  from
the 2017 - 2018 First Lego League Districts at Wright State
University.  Unfortunately our team did not qualify for the state
tournament, all the kids had fun this year (most important) and we
had great success this year.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1w7MAQK3YuTT2iJL-o2juoZ6gxUbsGVTK"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The team earned a maximum of 90 points on the robot game&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=11aMu6S6rvuuh7x8NasLG-1otWx3XlyZK"&gt;Robot Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1bYtaHDFfHXZyaJ5G4uMelk7HhXgLaaeT"&gt;Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1nzHMFZTtmhY3e6g2WBmCvssRI1kxJV0n"&gt;Core Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1NyI4HQsdkT5gZRZbSLIAO3VEuxFz-7Xo"&gt;Practice Robot Run&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1rSNIRM9xpIxrBG-NRU7l-YujHuzGCT3x"&gt;Robot Run 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1uFx57Y8TbRwObPMLbzm-gO0w3TiJyAWW"&gt;Robot Run 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1DTrZDLdoT0-ZP7NcAYN0dU1SpLSj6PkD"&gt;Robot Run 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1Fcjt1tVna67PIjY23rQwrRCrnlkQaAzM"&gt;Team Photo 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1LFIW2GDGfDRPMbRNmI0eT6fk2fgh2Xh2"&gt;Team Photo 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1jBc0VRKRJtSJYrBXcBQpmPb_6pN7GXik"&gt;Panorama of Tournament&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>2017 - 2018 First Lego League Regional Results for Steve</title><link href="/2017-2018-first-lego-league-regional-results-for-steve.html" rel="alternate"></link><published>2017-12-09T20:45:00-05:00</published><updated>2017-12-09T20:45:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2017-12-09:/2017-2018-first-lego-league-regional-results-for-steve.html</id><summary type="html">&lt;p&gt;Steve 2017 - 2018 First Lego League Regional Results at Emmerson&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here are the results from the  &lt;a href="https://www.facebook.com/BoroBots"&gt;Springboro
Robotics&lt;/a&gt; team Steve  from
the 2017 - 2018 First Lego League Regional at Emmersion
School.  Fortunately our team did qualify for the district
tournament, all the kids had fun this year (most important) and we
had great success this year.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1PVkUckBayXAVGafaZvFR4jBIQAs1zGQz"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The team earned 7th place on the robot game and earned a total of 30 points&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=14zKsLUHnM3RHzompEfb-QhcbbUYu0h3p"&gt;Robot Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1PodXCWSnBQhogk8ojGhRmB_iLeH8ZEUd"&gt;Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=15htUc6qNBC94No_hB95wKOXlK3sDDNwg"&gt;Core Values&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Passing of Everett Sherron A True American Hero</title><link href="/passing-of-everett-sherron-a-true-american-hero.html" rel="alternate"></link><published>2017-06-10T20:37:00-04:00</published><updated>2017-06-10T20:37:00-04:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2017-06-10:/passing-of-everett-sherron-a-true-american-hero.html</id><summary type="html">&lt;p&gt;Overview of Mr. Sherron's Work In Boy Scouts with Troop 18&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mr. Everett Sherron passed away on May 25, 2017 quietly in his sleep at age 100.
Over Everett's lifetime he has been active in Scouts, he has served with
Troop 18 since 1955.  For those mathematically challenged that is 62 years
far longer than I have been alive!  My Son Elijah Rovito and I have been with
Troop 18 for over a year plus we have seen Everett on many occasions when
Troop 18 and Pack 3019 would do events together.  Everett was a consistent
figure to our boys, every Tuesday rain, shine, or snow Everett
would appear at our weekly meeting.  Sometimes Everett would drive himself
but often times he would catch a ride with one of the other leaders.  Two
days before Everett passed away Troop 18 was blessed with Everett's
appearance for our committee meeting, Everett sat next to me on my right.  We
greeted each other and as usual Everett told me he was doing fine. I have never
heard Everett complain he would just carry on as usual doing his best.  It is
difficult to imagine with such a huge age difference but I believe our boys
appreciated Everett they would often assist Everett up and down stairs and
make sure his path was clear.  On June 3rd Troop 18 camped at Germantown
Metro Park (formally known as Camp Hook) for the Twin Valley Trails Hike event.
Camp Hook was started by Everett's Father in 1927 and was the motivation for
Everett's family to move to Middletown, Ohio from Kentucky.  Camp Hook was
the major Scout camp ground in south west Ohio until Camp Friedlander was opened
in 1991.  In 2010 Adam Stump led a Boy Scout Eagle project to place this dedication
monument and surround the tree from England with a fence.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1uMZo72I87J5FJarLDzeGdvUUa4nTYsNP"&gt;&lt;/p&gt;
&lt;p&gt;Troop 18 paid their respects:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1XgzO5iBbAq0bC6mEQ7qL-h9m4mzSRTNb"&gt;&lt;/p&gt;
&lt;p&gt;Troop 18 got the word out about Everett's passing and Scouters had a big presence at
the visitation which was June 9th and a large turn out for the church service on
June 10th.  We organized a large color guard at the grave site and were able
to line the road up with scouts from all across Dan Beard Council.  If you were able
to make it thanks!  Here is a picture as we are getting the color guard organized:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1y0cliLfpd4AqEHItyysEkHXcyPPKbEd9"&gt;&lt;/p&gt;
&lt;p&gt;Finally in the picture below you can see the Troop 18 boys surrounding
Everett's grave site with flags getting ready for the service to start.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1zICes_ueUxvswrcyxKS4slbhgdgaA7o3"&gt;&lt;/p&gt;
&lt;p&gt;At the end of the grave site service the boys gathered around in a circle and
joined their hands over hands together with Everett's casket in the middle of the
circle and said the same prayer they always say at the end of each Troop
meeting. Indeed this was the best way for all of us to wish Everett goodbye and to thank
him for so many years of service.&lt;/p&gt;
&lt;p&gt;Links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.journal-news.com/news/local/middletown-everett-sherron-lifetime-boy-scout-dies-age-100/yX8ZXY5Ea7DBxwANzDmMoK/"&gt;Middletown Journal Article about Everett's Passing&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.whio.com/news/local/everett-sherron-100-talks-about-his-boy-scout-involvement/rh78VI4GgP2yuDZfcfRIuI/"&gt;Everett Talks about Boy Scout Involvement at 100th birthday&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legacy.com/obituaries/dayton/obituary.aspx?n=everett-sherron&amp;amp;pid=185703950&amp;amp;fhid=22484"&gt;Everett's Obituary&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Securing Raspberry Pi SSH with Auto SSH Fail</title><link href="/securing-raspberry-pi-ssh-with-auto-ssh-fail.html" rel="alternate"></link><published>2017-04-02T12:00:00-04:00</published><updated>2017-04-02T12:00:00-04:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2017-04-02:/securing-raspberry-pi-ssh-with-auto-ssh-fail.html</id><summary type="html">&lt;p&gt;Secure SSH on a Raspberry Pi with this simple Python script&lt;/p&gt;</summary><content type="html">&lt;p&gt;My Raspberry Pi is used as a web server but I also use it to develop
Python code via SSH. My primary terminal into my Raspberry Pi is a
iPad Pro. I find the combination of a Raspberry Pi along with an 
iPad Pro a powerful combination.  It infuriates me when I look at 
/var/log/auth.log on my Raspberry Pi and see all the failed password
attempts. Use the command to find all of the failed password attempts:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /var/log/auth.log &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;Failed password&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some of these crackers are repeatedly trying to crack
into my Raspberry Pi, with enough guesses they will eventually get in. 
To make matters worse they are trying popular user names such as 
"root", "admin", "php", etc.  None of these are valid accounts on my
Raspberry Pi but I need to find a way to stop these attempts.  This is
not my first rodeo so to speak I have been putting computers on the
internet since 1988.  For as long as I can remember Unix has had this
simple concept of /etc/hosts.allow and /etc/hosts.deny.  Simply put a
IP address in /etc/hosts.deny with the syntax "ALL: 2.60.223.100" and 
they won't even connect to the SSH daemon. The /etc/hosts.deny file
prevents these crackers from having infinite attempts to crack my 
Raspberry Pi and it reduces the load on the little computer because
any network traffic from a IP address in /etc/hosts.deny won't be
allowed to connect to sshd.  But the idea of manually going through
the /var/log/auth.log file and adding addresses to /etc/hosts.deny
sounds painful and not something I am likely to keep up with.  This 
is a perfect use case for a simple Python script.  So here is a 
Python script I wrote called auto_ssh_fail.py:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# very simple program that scans /var/log/auth.log and looks for mis-behaving&lt;/span&gt;
&lt;span class="c1"&gt;# hosts.  Those mis-behaving hosts are then added to /etc/hosts.deny. This&lt;/span&gt;
&lt;span class="c1"&gt;# script is designed/tested on Raspbian Jesse.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_secure_log&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;        reads the file /var/log/auth.log&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/var/log/auth.log&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;secure_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;log_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;secure_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;log_lines&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_ip_address&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log_string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;        finds the ip address from the log string then returns it&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;from_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;log_string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;from &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;from_index&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;log_string_split&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;log_string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;from_index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log_string_split&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;log_string_split&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NULL&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse_secure_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secure_log_lines&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;        parses the secure log lines looking for string &amp;#39;Failed password&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;fail_ip_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;secure_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secure_log_lines&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;ban_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Failed password&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;secure_log_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;secure_index&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;invalid user&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;secure_log_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;secure_index&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="n"&gt;ban_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;for root&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;secure_log_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;secure_index&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="n"&gt;ban_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;for mail&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;secure_log_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;secure_index&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="n"&gt;ban_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ban_ip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;ip_address_to_ban&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_ip_address&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secure_log_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;secure_index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ip_address_to_ban&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NULL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;fail_ip_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ip_address_to_ban&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;fail_ip_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;fail_ip_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fail_ip_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fail_ip_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fail_ip_set&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fail_ip_list&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_hosts_to_deny&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fail_ip_list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;        add hosts in fail_ip_list to hosts.deny checking to make sure it&lt;/span&gt;
&lt;span class="sd"&gt;        does not already exist&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;ip_not_deined_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/etc/hosts.deny&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;hosts_deny_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;hosts_deny_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hosts_deny_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# make sure fail_ip adress it not already in hosts.deny&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fail_ip_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fail_ip_list&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;ip_not_denied&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hosts_deny_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hosts_deny_lines&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;fail_ip_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fail_ip_index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hosts_deny_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hosts_deny_index&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="n"&gt;ip_not_denied&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ip_not_denied&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;ip_not_deined_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fail_ip_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fail_ip_index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="c1"&gt;# add ip_not_deined_list to hosts_deny&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ip_not_deined_index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ip_not_deined_list&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;hosts_deny_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ALL: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;ip_not_deined_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ip_not_deined_index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="c1"&gt;# now write out new /etc/hosts.deny file&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/etc/hosts.deny&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;hosts_deny_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;hosts_deny_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writelines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hosts_deny_lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;secure_log_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read_secure_log&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;fail_ip_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parse_secure_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secure_log_lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;detected &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; mis-behaving ips&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fail_ip_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;following hosts will be deined&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fail_ip_list&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fail_ip_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;add_hosts_to_deny&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fail_ip_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The script above is simple, feel free to edit for your needs.
Be careful that you don't lock out your own IP address by logging in
with the wrong password.  To install this script create a directory 
with the command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir /home/pi/auto_ssh_fail
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then copy the script above to /home/pi/auto_ssh_fail/auto_ssh_fail.py.
At this point you can run the script but it has to be run as root
because it will modify the file /etc/hosts.deny, so prepend the run 
command with sudo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo python /home/pi/auto_ssh_fail/auto_ssh_fail.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then if you cat /etc/hosts.deny you should see IP addresses that 
correspond with failed password attempts in /var/log/auth.log:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /etc/hosts.deny
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now that you have the Python script auto_ssh_fail.py running we
need to have it run repeatedly automatically.  On Unix to run
programs automatically we use a tool called cron.  Cron is usually
installed in a system configuration in /etc/cron.hourly or 
/etc/cron.daily.  Scripts placed in /etc/cron.hourly are run
automatically every hour and scripts placed in /etc/cron.daily are
run once a day.  Raspbian is based on Debian which has this 
&lt;a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=308911"&gt;bug&lt;/a&gt;
that scripts with certain file names will be ignored.  It took
me several hours to figure out why my script was not running on
the hour, it was called auto_ssh_fail.sh.  Apparently the ".sh"
at the end of the file name was ignored by the run-parts command
which is used by cron to execute scripts.  Care needs to be
taken that full paths are used in cron based scripts because
the full environment is not loaded. In /etc/cron.hourly or
/etc/cron.daily copy the following script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="c1"&gt;# run this script every hour to scan the /var/log/auth.log looking for&lt;/span&gt;
&lt;span class="c1"&gt;# mis-behaving ip addresses then add the ip address to hosts.deny&lt;/span&gt;

&lt;span class="c1"&gt;# Action!&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;starting the auto_ssh_fail.py script ===========================================&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /home/pi/auto_ssh_fail/auto_ssh_fail.log &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
/bin/date &amp;gt;&amp;gt; /home/pi/auto_ssh_fail/auto_ssh_fail.log &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
/usr/bin/python2.7 /home/pi/auto_ssh_fail/auto_ssh_fail.py &amp;gt;&amp;gt; /home/pi/auto_ssh_fail/auto_ssh_fail.log &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
/bin/date &amp;gt;&amp;gt; /home/pi/auto_ssh_fail/auto_ssh_fail.log &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;finished the auto_ssh_fail.py script ===========================================&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /home/pi/auto_ssh_fail/auto_ssh_fail.log &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now every hour or once a day (I recommend once an hour) the 
log file /var/log/auth.log will be automatically scanned and
failed password attempts will be added to /etc/hosts.deny.  If
you run the script hourly then at most a cracker will have 60
minutes to attempt a break-in which is very difficult if you
use a strong password.  Another suggestion is to not use passwords
but 
&lt;a href="http://raspi.tv/2012/how-to-set-up-keys-and-disable-password-login-for-ssh-on-your-raspberry-pi"&gt;SSH keys&lt;/a&gt;.  SSH keys are long and are random, if you are
careful to protect your private key your Raspberry Pi would be
extremely difficult to crack.  &lt;/p&gt;</content></entry><entry><title>Efficient Generation of Image Chips for Training Deep Learning Algorithms</title><link href="/efficient-generation-of-image-chips-for-training-deep-learning-algorithms.html" rel="alternate"></link><published>2017-03-11T12:00:00-05:00</published><updated>2017-03-11T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2017-03-11:/efficient-generation-of-image-chips-for-training-deep-learning-algorithms.html</id><summary type="html">&lt;p&gt;Abstract: Training deep convolutional networks for satellite or aerial image
analysis often requires a large amount of training data. For a more robust
algorithm, training data need to have variations not only in the background and
target, but also radiometric variations in the image such as shadowing,
illumination changes, atmospheric …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Abstract: Training deep convolutional networks for satellite or aerial image
analysis often requires a large amount of training data. For a more robust
algorithm, training data need to have variations not only in the background and
target, but also radiometric variations in the image such as shadowing,
illumination changes, atmospheric conditions, and imaging platforms with
different collection geometry. Data augmentation is a commonly used approach to
generating additional training data. However, this approach is often
insufficient in accounting for real world changes in lighting, location or
viewpoint outside of the collection geometry. Alternatively, image simulation
can be an efficient way to augment training data that incorporates all these
variations, such as changing backgrounds, that may be encountered in real data.
The Digital Imaging and Remote Sensing Image Image Generation (DIRSIG) model is
a tool that produces synthetic imagery using a suite of physics-based radiation
propagation modules. DIRSIG can simulate images taken from different sensors
with variation in collection geometry, spectral response, solar elevation and
angle, atmospheric models, target, and background. For our research, we
selected ground vehicles as target objects and incorporated the Simulation of
Urban Mobility (SUMO) model into DIRSIG to generate scenes with vehicle
movement. SUMO is a multi-modal traffic simulation tool that explicitly models
vehicles that move through a given road network. Using the combination of
DIRSIG and SUMO, we can quickly generate hundreds of image chips, with the
target at the center with different backgrounds. The simulations generated
chips with vehicles and helicopters as targets, and corresponding images
without targets. Using parallel computing, 120,000 training images were
generated in about an hour. Some preliminary results show an improvement in the
deep learning algorithm when real image training data are augmented with the
simulated images.&lt;/p&gt;
&lt;p&gt;Links to paper:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1bWDcVBb0iuzpS0dbm4V-j5dbH_fE0lU-"&gt;Paper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>2016 - 2017 First Lego League District Results for BEEES</title><link href="/2016-2017-first-lego-league-district-results-for-beees.html" rel="alternate"></link><published>2016-12-11T22:32:00-05:00</published><updated>2016-12-11T22:32:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2016-12-11:/2016-2017-first-lego-league-district-results-for-beees.html</id><summary type="html">&lt;p&gt;BEEES 2016 - 2017 First Lego League Regional Results at Yellow Springs High School&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here are the results from the  &lt;a href="https://www.facebook.com/BoroBots"&gt;Springboro
Robotics&lt;/a&gt; team BEEES  from
the 2016 - 2017 First Lego League Regional at Yellow Springs High
School.  Unfortunately our team didn't qualify for the district
tournament but all the kids had fun this year (most important) and we
had great success this year.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1EZeJ5cIpOTZTj3MCMT7K8fx0Y8WY_gbW"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1BmBFr4lhHSRkpsYAb2gqUZic4BUSRTRz"&gt;Score Board 01&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=13Y7f2P3pPwTmG5JzGUso8aeNt-NoEE55"&gt;Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1Wx3_UFZJaeX-ysSdKpr0hpqxsjYm6wWD"&gt;Core Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1Wm5WYppEq0uedWMLF4Fj7MpjOeKPqJ2R"&gt;Robot Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Raspberry PI Touch Screen with Chromium Web Browser</title><link href="/raspberry-pi-touch-screen-with-chromium-web-browser.html" rel="alternate"></link><published>2016-03-12T23:53:00-05:00</published><updated>2016-03-12T23:53:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2016-03-12:/raspberry-pi-touch-screen-with-chromium-web-browser.html</id><summary type="html">&lt;p class="first last"&gt;Experimenting with the Raspberry PI Touch Screen running Chromium&lt;/p&gt;
</summary><content type="html">&lt;p&gt;For my birthday my lovely Wife got me a Raspberry Pi Touch Screen that is
made by the
&lt;a class="reference external" href="https://www.raspberrypi.org/blog/the-eagerly-awaited-raspberry-pi-display/"&gt;Raspberry Pi foundation&lt;/a&gt;.
This is a 7&amp;quot; display at 800x480 resolution with 10 point capacitive touchscreen.
The screen is easy to install with no soldering required.  You can see first
hand how easy it is to install with this youtube video:&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/hqdz66Y-H7M" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;After setting up the screen I then installed the Chromium web browser with
the instructions from this &lt;a class="reference external" href="https://www.raspberrypi.org/forums/viewtopic.php?t=121195"&gt;forum post&lt;/a&gt;.
If you read the entire blog post you will discover the author &amp;quot;kusti8&amp;quot; actually
compiled Chromium from source code and posted the packages on dropbox.  I
used the commands in the first post and everything worked great.  For those that
are curious about performance I captured the Raspberry Pi 2 operating with
Chromium in a youtube video and posted here:&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/F6Zj00BxtrA" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;When I get my hands on a Raspberry Pi 3 I will update the video to show off
the Raspberry Pi 3's improved performance.&lt;/p&gt;
</content></entry><entry><title>Trying out OS X Fuse and SSHFS connected to Raspberry Pi</title><link href="/trying-out-os-x-fuse-and-sshfs-connected-to-raspberry-pi.html" rel="alternate"></link><published>2016-02-06T23:53:00-05:00</published><updated>2016-02-06T23:53:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2016-02-06:/trying-out-os-x-fuse-and-sshfs-connected-to-raspberry-pi.html</id><summary type="html">&lt;p&gt;Experiments with OS X Fuse and SSHFS connected to Raspberry Pi&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am always seeking ways to improve my workflow.  As a heavy Sublime Text user I
had a colleague suggest &lt;a href="https://wbond.net/sublime_packages/sftp/usage"&gt;wbond Sublime
SFTP&lt;/a&gt; but I just can't spend the
$30 for it.  Yes it is true I am cheap and I prefer open source software, it is
bad enough I had to buy Sublime Text because I was using it so much.  Another
alternative that I wanted to investigate was
&lt;a href="https://en.wikipedia.org/wiki/SSHFS"&gt;SSHFS&lt;/a&gt;.  SSHFS lets a user "mount" a
remote file system with no additional software on the server side except for
standard ssh.  After the remote file system is mounted Sublime Text can be
used to edit files or do any other standard file command from the shell as
if the file system were local.&lt;/p&gt;
&lt;p&gt;This is a little confusing but SSHFS is designed to use &lt;a href="https://en.wikipedia.org/wiki/Filesystem_in_Userspace"&gt;FUSE which stands for
Filesystem In Userspace&lt;/a&gt;.
FUSE basically allows non-privileged users create their own file systems
without messing with the kernel.  I have heard of people using it to access
NTFS hard disks in the past as well.  SSHFS is a "plugin" for FUSE.&lt;/p&gt;
&lt;p&gt;So what do you have to install on OS X to get this to work. First off I am
running on 10.11.3 OS X El Capitan the latest at the time of writing this post.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="http://osxfuse.github.io"&gt;OS X Fuse&lt;/a&gt; they have a nice installer
of the stable release.  For added flexibility I would install the Mac Fuse
compatibility layer as you will be able to support more file systems.  This
is not needed if you just want to use SSHFS.&lt;/li&gt;
&lt;li&gt;Install &lt;a href="http://osxfuse.github.io"&gt;SSHFS&lt;/a&gt; they have a nice installer of the
stable release.&lt;/li&gt;
&lt;li&gt;A reboot is recommended.&lt;/li&gt;
&lt;li&gt;To mount a file system you use the command "sshfs" from the OS X terminal
which is similar to the standard mount command:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sshfs pi@192.168.1.9:/ ~/temp/pi/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then if you perform a &lt;code&gt;df -h&lt;/code&gt; command you will notice that a new file system
is mounted.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Todds-MacBook-Pro:pi rovitotv$ df -h
Filesystem         Size   Used  Avail Capacity   iused     ifree %iused  Mounted on
/dev/disk1        &lt;span class="m"&gt;1&lt;/span&gt;.8Ti  810Gi  &lt;span class="m"&gt;1&lt;/span&gt;.0Ti    &lt;span class="m"&gt;44&lt;/span&gt;% &lt;span class="m"&gt;212471929&lt;/span&gt; &lt;span class="m"&gt;275606053&lt;/span&gt;   &lt;span class="m"&gt;44&lt;/span&gt;%   /
devfs             193Ki  193Ki    0Bi   &lt;span class="m"&gt;100&lt;/span&gt;%       &lt;span class="m"&gt;666&lt;/span&gt;         &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;100&lt;/span&gt;%   /dev
map -hosts          0Bi    0Bi    0Bi   &lt;span class="m"&gt;100&lt;/span&gt;%         &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;100&lt;/span&gt;%   /net
map auto_home       0Bi    0Bi    0Bi   &lt;span class="m"&gt;100&lt;/span&gt;%         &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;100&lt;/span&gt;%   /home
pi@192.168.1.9:/   13Gi  &lt;span class="m"&gt;4&lt;/span&gt;.2Gi  &lt;span class="m"&gt;8&lt;/span&gt;.5Gi    &lt;span class="m"&gt;33&lt;/span&gt;%    &lt;span class="m"&gt;144854&lt;/span&gt;    &lt;span class="m"&gt;752746&lt;/span&gt;   &lt;span class="m"&gt;16&lt;/span&gt;%   /Users/rovitotv/temp/pi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once a remote file system is mounted you can use the finder or the terminal
as normal and all commands that occur from /Users/rovitotv/temp/pi happen
on the Raspberry Pi.  Performance seems to be decent even over wi-fi.&lt;/p&gt;
&lt;p&gt;After all your work is completed you can unmount the volume with the command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;umount /Users/rovitotv/temp/pi
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>2015 - 2016 First Lego League District Results for The Lego Creepers</title><link href="/2015-2016-first-lego-league-district-results-for-the-lego-creepers.html" rel="alternate"></link><published>2016-01-16T22:06:00-05:00</published><updated>2016-01-16T22:06:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2016-01-16:/2015-2016-first-lego-league-district-results-for-the-lego-creepers.html</id><summary type="html">&lt;p&gt;Lego Creepers 2015 - 2016 First Lego League District Results at&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sinclair Community College.&lt;/p&gt;
&lt;p&gt;Here are the results from the  &lt;a href="https://www.facebook.com/BoroBots"&gt;Springboro
Robotics&lt;/a&gt; rookie team Lego  Creepers  from
the 2015 - 2016 First Lego League Districts tournament at Sinclair  Community
College.  Unfortunately our team didn't qualify for the state tournament but all
the kids had fun this year (most important) and we had great success this year
by qualifying for districts as a a rookie team.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1RfEAccXMBquNQZuVM2FuhpNK84sroIZs"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1c_VOC2TIUOSmJROHNaLYRVl66MVdzCRD"&gt;Score Board 01&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1SFvQrjs8lfMssA5vxQhwaUJtwgKZR5mK"&gt;Score Board 02&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1tgIGt6TzJC49m4X7Y-oIoHMix2DZ6GMQ"&gt;Score Board 03&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1JTGxtQfdDO3t0UrBRvJngTCQ91-6Tx77"&gt;Score Board 04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1spb1iQeFO2QOabGToR4UcezRAqWEJyif"&gt;Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1KUMc1TdAqOxh46-H2NLjA86-gx6vUgQu"&gt;Core Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1TKPS5RAMPY1Doko4RoguRF93VunFXAA0"&gt;Robot Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>rovitotv.org Now Powered By Pelican a Static Web Generator in Python</title><link href="/rovitotvorg-now-powered-by-pelican-a-static-web-generator-in-python.html" rel="alternate"></link><published>2016-01-02T12:00:00-05:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2016-01-02:/rovitotvorg-now-powered-by-pelican-a-static-web-generator-in-python.html</id><summary type="html">&lt;p&gt;Big changes at rovitotv.org which is now powered by Pelican&lt;/p&gt;</summary><content type="html">&lt;p&gt;Over the holiday break I switched the blog from WordPress on the Raspberry PI
2 to using Pelican.  Pelican is written in Python and is a static web
generator, this means it takes static text files and automatically converts
those pages to HTML.  Static generators are making a come back because of
all the security vulnerabilities in software such as WordPress and having to
maintain a database sever.  If you take a look at my blog I don't even post
more than once a month so I really don't need a complicated dynamic website.
Enjoy the new site and drop me an email to let me know what you think
rovitotv AT gmail dot com.&lt;/p&gt;</content></entry><entry><title>rovitotv.org domain is running again....</title><link href="/rovitotvorg-domain-is-running-again.html" rel="alternate"></link><published>2015-09-16T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2015-09-16:/rovitotvorg-domain-is-running-again.html</id><summary type="html">&lt;p&gt;Re-location so the site is running again&lt;/p&gt;</summary><content type="html">&lt;p&gt;The rovitotv.org domain was down for a few months while the family and I moved.
Now that the move is completed and things have calmed down a little I have had
time to setup the Raspberry Pi and get the rovitotv blog up and going.
Hopefully I can post again more frequently in the near future.&lt;/p&gt;</content></entry><entry><title>Eli Created a Lego Raspberry PI Case for New Raspberry PI 2</title><link href="/eli-created-a-lego-raspberry-pi-case-for-new-raspberry-pi-2.html" rel="alternate"></link><published>2015-03-13T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2015-03-13:/eli-created-a-lego-raspberry-pi-case-for-new-raspberry-pi-2.html</id><summary type="html">&lt;p&gt;Eli created a inexpensive case for the raspberry PI 2 from Lego&lt;/p&gt;</summary><content type="html">&lt;p&gt;Save some money, build your Raspberry Pi case out of Legos.  Even better have
your kid build the case for you.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1LzyXW65oE1CtT572hHjr18eKHKOvfutr"&gt;&lt;/p&gt;</content></entry><entry><title>Getting Ready for the USAF Maker Fest</title><link href="/getting-ready-for-the-usaf-maker-fest.html" rel="alternate"></link><published>2015-03-13T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2015-03-13:/getting-ready-for-the-usaf-maker-fest.html</id><summary type="html">&lt;p&gt;Elijah and I went to Tec^Edge and particpated in the Maker Fest&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am super excited for the USAF Maker Fest.  Going to show off my Raspberry Pi
with web server/email server.  The directions are found on
&lt;a href="https://github.com/rovitotv/DigitalFreedomWithRaspberryPI"&gt;GitHub&lt;/a&gt;.  Here is a
picture of the front door.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1-neYPeECa6fymFbC_wpFAaSwSQNfZ1C5"&gt;&lt;/p&gt;</content></entry><entry><title>It has Been A While</title><link href="/it-has-been-a-while.html" rel="alternate"></link><published>2015-02-21T12:00:00-05:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2015-02-21:/it-has-been-a-while.html</id><summary type="html">&lt;p&gt;Upgrade blog to Raspberry PI 2&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have not posted to the blog for a while but I am still here! Upgraded my blog
to a new Raspberry Pi 2 for quad core 900 Mhz performance. Hopefully I got the
entire blog moved over to the new Raspberry Pi 2 and no content is missing.  I
have not had time to get a case for the Raspberry Pi 2 yet.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1WLLGMxG0TZYX9hIKnr7_dfnmvvsAsjUS"&gt;&lt;/p&gt;</content></entry><entry><title>Elijah, Linda, and Todd make our first movie stop-move animation with Legos</title><link href="/elijah-linda-and-todd-make-our-first-movie-stop-move-animation-with-legos.html" rel="alternate"></link><published>2014-08-10T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2014-08-10:/elijah-linda-and-todd-make-our-first-movie-stop-move-animation-with-legos.html</id><summary type="html">&lt;p&gt;Using legos we made our first movie stop-move animation&lt;/p&gt;</summary><content type="html">&lt;p&gt;It took some time but our first movie is complete.  More like short at 1 minute
49 seconds, and it is posted to youtube.com:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/AofKhkL02b4"&gt;YouTube link to video&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>Pack 19 Fishing at Camp Hook</title><link href="/pack-19-fishing-at-camp-hook.html" rel="alternate"></link><published>2014-06-14T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2014-06-14:/pack-19-fishing-at-camp-hook.html</id><summary type="html">&lt;p&gt;Pack 19 Fishing at Camp Hook fun summer time activity&lt;/p&gt;</summary><content type="html">&lt;p&gt;Pack 19 and other packs from Hopewell District had a beautiful day for fishing
and other fun in the sun.  This is our Fishing Challenge: North Hopewell Cub
Scout Kick-Off to Summer event.  The fish were very "smart" with water clear
enough that allowed the boys to watch the fish.  In the picture below this is
Elijah wondering why the fish aren't biting even though he has dropped the worm
right in front of them.  Ironically in one case a fish did bite the worm and
took the half with out the hook.  Another fish took the worm and the hook but
the hook came off the line and the fish got away.  It was catch and release
anyway.  The boys had a great time.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1pQaXEt-HNczE3EFf41vVmrUYForPsUAo"&gt;&lt;/p&gt;</content></entry><entry><title>Rovitotv and Elijah Meet Marvin Lewis</title><link href="/rovitotv-and-elijah-meet-marvin-lewis.html" rel="alternate"></link><published>2014-06-10T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2014-06-10:/rovitotv-and-elijah-meet-marvin-lewis.html</id><summary type="html">&lt;p&gt;Rovitotv and Elijah Meet Marvin Lewis&lt;/p&gt;</summary><content type="html">&lt;p&gt;Being from Cincinnati I am a huge Cincinnati Bengals fan.  No matter how the
team performs I am cheering for them usually watching all the games.  Tonight I
got to meet Coach Marvin Lewis because Elijah has been working hard in school
and got on the honor roll.  Coach Lewis runs the &lt;a href="http://www.marvinlewis.org/LearningisCool.aspx"&gt;Marvin Lewis Learning is Cool
program&lt;/a&gt; so we got free tickets
to the Zoo and coupons with Gold Star.  While we were at the Zoo we stood in
line and got to meet Coach Lewis and get this great picture:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1YagCSb-Do5AlNtwjj1mvlVriNndkfFmc"&gt;&lt;/p&gt;
&lt;p&gt;Thanks Coach Lewis!!!! It is incredible that you sponsor such a cool event and encourage
kids to do well in school.&lt;/p&gt;</content></entry><entry><title>Hello World!</title><link href="/hello-world.html" rel="alternate"></link><published>2014-06-08T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2014-06-08:/hello-world.html</id><summary type="html">&lt;p&gt;Hello World from the Raspberry Pi&lt;/p&gt;</summary><content type="html">&lt;p&gt;Welcome to rovitotv's world.  rovitotv = Todd V. Rovito.  It is my Unix username
and has been for a long time.  I am moving my web site from Google Apps to my
own web server so give me some time to move content over. My web site is powered
by the Raspberry PI an amazing computer for $40.&lt;/p&gt;</content></entry><entry><title>Speedy Air Powered Pinewood Derby Car</title><link href="/speedy-air-powered-pinewood-derby-car.html" rel="alternate"></link><published>2013-02-11T12:00:00-05:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2013-02-11:/speedy-air-powered-pinewood-derby-car.html</id><summary type="html">&lt;p&gt;How to make a RC air powered pinewood derby car&lt;/p&gt;</summary><content type="html">&lt;p&gt;For the last two years my Son has been involved in Cub Scouts and Pack 19 in
Middletown Ohio puts on a heck of a Pinewood Derby. Pack 19 allows leaders and
parents to build their own cars with the hope that it will distract the parents
and let the Cub Scouts build their own car. This policy works!!!!! I am one of
those Dad’s that obsesses over the Pinewood Derby race. For the 2012 race which
was my Son’s first year I generated a good idea to create an air powered car
that was to use a rubber band but I didn’t have time to complete it. The 2013
Derby was the debut year of the Speedy Air Powered Pinewood Derby Car!!!! Design
changes were made after speaking with a few engineers at AFRL over lunch. The
use of radio controlled (RC) parts made this project possible and fairly easy to
construct.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1BHG3IkHStI1VZRKob2vPYrCj419M2nWX"&gt;&lt;/p&gt;
&lt;p&gt;In the picture above you can see the car being constructed. We used the
following parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Two blocks of pinewood from the standard kit. One block was the car body and the other block was used to build an motor mount&lt;/li&gt;
&lt;li&gt;R/C Speed Controller&lt;/li&gt;
&lt;li&gt;R/C Receiver&lt;/li&gt;
&lt;li&gt;R/C Motor&lt;/li&gt;
&lt;li&gt;Not shown in the picture above battery&lt;/li&gt;
&lt;li&gt;Spektrum DX6i transmitter&lt;/li&gt;
&lt;li&gt;3 inch 2/3 propeller (buy a bunch of these because a few of these will be broken during testing and construction)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After construction and a few test runs and tweaking the car is shown in the
picture below in its transportation box:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1ziuk_wfGge6wn6JGX_-UbmjGbVhRHZ0Q"&gt;&lt;/p&gt;
&lt;p&gt;Yes I used rubber bands to hold the car together. This is a bad idea especially
for our track which doesn’t have the best stop mechanism. A few times during the
race I had to realign the parts and apply the rubber bands again. Below is a
picture of all the cars before the start of the race, the Speedy Air Powered
Pinewood Derby car is in the front right of the picture. I was really worried
about the bunny car because it looked fast.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1tg5tdm1VJ5k6RYbA5w5fYKJXkqEj2FOD"&gt;&lt;/p&gt;
&lt;p&gt;Not shown on the table above another powered car made a appearance at the race
(below) but this Dad had solder problems so we didn’t get to race until the end.
Please take note I am not the only parent obsessed with the Pinewood Derby.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=1uuchb5NDbkTBDe_1QQnqeMh4ZAchOVAM"&gt;&lt;/p&gt;
&lt;p&gt;Below are some bad movies. It was difficult to control the throttle and take
movies on my iPhone at the same time. Needless to say this car was very fast. I
rarely had to apply much throttle to win. The car weighed in at exactly 5 oz and
was the exact size and dimensions as required. It was fun to build and even more
fun to race. Thanks to all the people that pitched in I couldn’t of done it
without your help and encouragement!&lt;/p&gt;
&lt;p&gt;Links to vidoes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=140gm5TSyEDabdS_HfelsQQknvjtHcCYg"&gt;Movie Racing Large video file 32 MB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1gUr8TyUL9fZYfvl4zW0rH3cnW2jpRdKH"&gt;Pinewood Derby 2013 Up the Track 3.2 MB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Electro-Optical Synthetic Civilian Vehicle Data Domes</title><link href="/electro-optical-synthetic-civilian-vehicle-data-domes.html" rel="alternate"></link><published>2012-07-01T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2012-07-01:/electro-optical-synthetic-civilian-vehicle-data-domes.html</id><summary type="html">&lt;p&gt;Abstract: This paper will look at using open source tools (Blender, LuxRender,
and Python) to generate a large data set to be used to train an object
recognition system. The model produces camera position, camera attitude, and
synthetic camera data that can be used for exploitation purposes. We focus on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Abstract: This paper will look at using open source tools (Blender, LuxRender,
and Python) to generate a large data set to be used to train an object
recognition system. The model produces camera position, camera attitude, and
synthetic camera data that can be used for exploitation purposes. We focus on
electro-optical (EO) visible sensors to simplify the rendering but this work
could be extended to use other rendering tools that support different
modalities. The key idea of this paper is to provide an architecture to produce
synthetic training data which is modular in design and constructed on open-
source off-the-shelf software yielding a physics accurate virtual model of the
object we want to recognize. For this paper the objects we are focused on are
civilian vehicles. This architecture shows how leveraging existing open-source
software allows for practical training of Electro-Optical object recognition
algorithms.&lt;/p&gt;
&lt;p&gt;Links to paper, presentation, and videos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1xd8LjM_iJUMLM0Cq8ZTYbsbsYjrp9Lq_"&gt;Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1aZg3AL258UMy6o18o2iNkd_yvBvG8j-I"&gt;Presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1BaDFeUhiOoxY6vKNd8CUvsUpdMJ7j74x"&gt;Video showing light conditions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1tYmoKI2f4L34fEPD14ARx0XHCL2Xyakf"&gt;Video showing positions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Image Processing in the Amazon Cloud with Enthought Python</title><link href="/image-processing-in-the-amazon-cloud-with-enthought-python.html" rel="alternate"></link><published>2012-07-01T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2012-07-01:/image-processing-in-the-amazon-cloud-with-enthought-python.html</id><summary type="html">&lt;p&gt;Abstract: Key idea of this work is to provide a open source frame work for
image processing that can be run on different parallel processing platforms.
Parallel processing is necessary because sensors are producing more data at
faster rates. This presentation looks at wide area motion imagery (WAMI) data
from …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Abstract: Key idea of this work is to provide a open source frame work for
image processing that can be run on different parallel processing platforms.
Parallel processing is necessary because sensors are producing more data at
faster rates. This presentation looks at wide area motion imagery (WAMI) data
from LAIR public released data set. Traditional S&amp;amp;E tools don’t scale in the
cloud in terms of performance or cost. Open source software along with cloud
computing becomes an enabler of affordable parallel processing because license
costs per node are minimized plus computation has become a commodity. This
presentation uses Enthought Python Distribution with parallel processing support
via built-in ZeroMQ. This process can be automated to produce large amounts of
data with minimal human effort.&lt;/p&gt;
&lt;p&gt;Links to paper and sample code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1ikj8W3poF0MxozazRzCriBdx1RRYHlm8"&gt;Presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1Ss5Mi-9KnDd4NLyKOgPXJHr1tKkKVels"&gt;Frame Equalization (python code)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1UKjiGHkCDuoYBA9MfChwusUKw460rKpi"&gt;Frame Equalization Server (python code)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>My Coach and Friend Mike "Noodles" Nocheck Died 6/22/2012</title><link href="/my-coach-and-friend-mike-noodles-nocheck-died-6222012.html" rel="alternate"></link><published>2012-06-26T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2012-06-26:/my-coach-and-friend-mike-noodles-nocheck-died-6222012.html</id><summary type="html">&lt;p&gt;When I was younger I was an avid swimmer. My Coach and Friend Mike "Noodles"
Nocheck died 6/22/2012 below is an article I found in my archives from the early
1990's about Noodles and his "retirement" after 16 years at Gamble Nippert YMCA.
Did he actually retire? No …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I was younger I was an avid swimmer. My Coach and Friend Mike "Noodles"
Nocheck died 6/22/2012 below is an article I found in my archives from the early
1990's about Noodles and his "retirement" after 16 years at Gamble Nippert YMCA.
Did he actually retire? No he went on to coach my high school swim team at Oak
Hills for another 20 years. That is over 36 years of coaching!!! Noodles had an
intensity about him that brought out the very best in his swimmers. Just when
you thought you couldn't swim another yard he would show you how. Noodles had a
connection with his athletes that is difficult to describe, he never cuddled us
yet was very good at bringing out the best and making us a little better with
each swim. Before each meet we would huddle together and say a prayer, Noodles
taught us how to be reverent. I think of all the impurities in sports today and
rarely do you hear about a coach as dedicated as Noodles. Surely the world lost
a legend on 6/22/2012. All of us that had the privilege to have Noodles as a
coach can remember him best by tying to emulate his nature when dealing with
kids.&lt;/p&gt;
&lt;p&gt;Noodles I will always remember to keep my left elbow up and not drag it in the
water, you should take it easy now and retire knowing that you are the best
there is!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo" src="https://drive.google.com/uc?id=17HzGttScoIvK2822ncubo-K2zfFvtZqc"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1ZEnM4LLDWQFvOm2i9f6c6WvGuRjVNny6"&gt;Scanned in article about Noodles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>SIFT Vehicle Recognition with Semi-Synthetic Model Database</title><link href="/sift-vehicle-recognition-with-semi-synthetic-model-database.html" rel="alternate"></link><published>2012-04-01T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2012-04-01:/sift-vehicle-recognition-with-semi-synthetic-model-database.html</id><summary type="html">&lt;p&gt;Object recognition with a semi-synthetic model database&lt;/p&gt;</summary><content type="html">&lt;p&gt;Abstract: Object recognition is an important problem that has many applications
that are of interest to the United States Air Force (USAF). Recently the USAF
released its update to Technology Horizons, a report that is designed to guide
the science and technology direction of the Air Force. Technology Horizons
specifically calls out for the need to use autonomous systems in essentially all
aspects of Air Force operations [1]. Object recognition is a key enabler to
autonomous exploitation of intelligence, surveillance, and reconnaissance (ISR)
data which might make the automatic searching of millions of hours of video
practical. In particular this paper focuses on vehicle recognition with Lowe’s
Scale-invariant feature transform (SIFT) using a model database that was
generated with semi-synthetic data. To create the model database we used a
desktop laser scanner to create a high resolution 3D facet model. Then the 3D
facet model was imported into LuxRender, a physics accurate ray tracing tool,
and several views were rendered to create a model database. SIFT was selected
because the algorithm is invariant to scale, noise, and illumination making it
possible to create a model database of only a hundred original viewing locations
which keeps the size of the model database reasonable.&lt;/p&gt;
&lt;p&gt;After a few years of other work this is my re-entry back into pattern
recognition.&lt;/p&gt;
&lt;p&gt;Links to paper and presentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1VZkgs6iEvn-FpeN_nRFcQdo_eZvt3Wfa"&gt;Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1SfQY2eIqp8Hx-0-55kS-jQKIS6scx6vm"&gt;Presentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Physics Accurate Layered Sensing Model version 2 for ATR Center</title><link href="/physics-accurate-layered-sensing-model-version-2-for-atr-center.html" rel="alternate"></link><published>2011-08-01T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2011-08-01:/physics-accurate-layered-sensing-model-version-2-for-atr-center.html</id><summary type="html">&lt;p&gt;Learn how to build a layered sensing model with open source software version 2&lt;/p&gt;</summary><content type="html">&lt;p&gt;The main focus of this project was to provide an architecture for layered
sensing simulation. It is modular in design and constructed on open-source-off-
the-shelf-software (Blender, LuxRender, Python, OpenCV, and SUMO).&lt;/p&gt;
&lt;p&gt;The project was complied from previous work, fixing many errors such as,
multiple vehicle models and color projections. I teamed with and mentored two
undergraduate students throughout the process. Their effort enabled them to
increase their knowledge and experience with Linux, Python, Ray Tracing, and Geo-
Projections.&lt;/p&gt;
&lt;p&gt;Links to presentation and video:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1HG_FN2I4ETFxlyahPLL5DWWipSl7VqwB"&gt;Presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1p64E5D1y_ijtSYFIUVs4AVb9nUTOyBEo"&gt;Building video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1254f2wC7PSu-TyHfq9xI9-hOwlPcU2H6"&gt;Medium flyer video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1qhYLMPl31a27Hzyhh4aePp9WU6zXZ8ut"&gt;Multi-car video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=10GukqBZk0nSkqJmtlE8J3oA-dcjD5ObK"&gt;Sadr City in Blender video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1CvdEVTdSSPX_g5mPI-o6rnfos-L7wFtn"&gt;Pursuer with five streams video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Physics Accurate Layered Sensing Model</title><link href="/physics-accurate-layered-sensing-model.html" rel="alternate"></link><published>2011-07-01T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2011-07-01:/physics-accurate-layered-sensing-model.html</id><summary type="html">&lt;p&gt;Learn how to build a layered sensing model with open source software&lt;/p&gt;</summary><content type="html">&lt;p&gt;Abstract: This paper will look at using open source tools (Blender [1],
LuxRender [2], Open CV [3], SUMO [4], and Python [5]) to build an image
processing model for exploring combinations of sensors/platforms for any given
image resolution. The model produces camera position, camera attitude, and
synthetic camera data that can be used for exploitation purposes. We focus on
electro-optical (EO) visible sensors to simplify the rendering but this work
could be extended to use other rendering tools that support different
modalities. Open Computer Vision (Open CV) is used to generate a camera model
for the intrinsics of the virtual camera. This camera model is then used to geo-
project the images from pixel space into a world coordinate system storing the
output in National Imagery Transmission Format (NITF) for display with standard
Intelligence Analysis (IA) tools such as RYA’s Pursuer [6]. We also demonstrate
Simulation of Urban Mobility (SUMO) software to simulate complex traffic
patterns. The key idea of the paper is to provide an architecture for layered
sensing simulation which is modular in design and constructed on open-source
off-the-shelf software yielding a physics accurate virtual model of the world.
This architecture shows how leveraging existing open-source software allows for
practical layered sensing modeling to be rapidly assimilated and utilized in
real-world applications. In this paper we demonstrate our model output is
automatically exploitable by using generated data with an innovative geo-
registration algorithm and real time display.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1QwYS7jOVuKRAbV4BbpaCxrw4BHV-fi56"&gt;Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1-HbP96RIicmjOk2LXBh43HsmfFPbSk5Y"&gt;Presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=13Z__K5z0GDeK3CycJ1_dGINmTfV2Usj5"&gt;Blender Camera Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1Ghg715obdFkE67dedvqkzrcejEYFFzeB"&gt;SUMO Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1MSfBBnPeviGvULip6PSwg8iPo6TzLegx"&gt;Sadr City Car Animation Wire Frame&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1WWTkWZya8_-yEPSjyPSSSDUa7YUq63Jr"&gt;Building Camera Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=15iIPhWcxeMPjmdeWH9gJFKkB7dh-lux6"&gt;Synthetic NITF in Pursuer Animation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Open Source Based Architecture For Layered Sensing Applications</title><link href="/open-source-based-architecture-for-layered-sensing-applications.html" rel="alternate"></link><published>2010-04-01T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2010-04-01:/open-source-based-architecture-for-layered-sensing-applications.html</id><summary type="html">&lt;p&gt;Using open source tools is an example of layered sensing applications&lt;/p&gt;</summary><content type="html">&lt;p&gt;Abstract: We present an architecture for layered sensing which is constructed
on open source and government off-the-shelf software. This architecture shows
how leveraging existing open-source software allows for practical graphical user
interfaces along with the underlying database and messaging architecture to be
rapidly assimilated and utilized in real-world applications. As an example of
how this works, we present a system composed of a database and a graphical user
interface which can display wide area motion imagery, ground-based sensor data
and overlays from narrow field of view sensors in one composite image composed
of sensor data and other metadata in separate layers on the display. We further
show how the development time is greatly reduced by utilizing open-source
software and integrating it into the final system design. The paper describes
the architecture, the pros and cons of the open-source approach with results for
a layered sensing application with data from multiple disparate sensors.
Keywords: SPADE, layered sensing, open-source, NASA World Wind, NITF, network
centric warfare&lt;/p&gt;
&lt;p&gt;Pursuer is based on NASA's World Wind and is a good example of Open Source
within the government. We are currently hosting the project on forge.mil with an
active open source DoD community. Links to paper, presentation, and code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=11f2TG64i2Bor_dHNq5dffNolPgvrdoBK"&gt;Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1p_pdgQKrDM15xiDpGsFI1eGnZGER570K"&gt;Presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1KV6Mk_DQbITUFW5hlTkV1r8LDnbvFg9H"&gt;Technology Milestone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Antenna Aimpoint Integration For Staring Mode Surveillance</title><link href="/antenna-aimpoint-integration-for-staring-mode-surveillance.html" rel="alternate"></link><published>2008-07-01T12:00:00-04:00</published><updated>2015-12-25T12:00:00-05:00</updated><author><name>Todd V. Rovito</name></author><id>tag:None,2008-07-01:/antenna-aimpoint-integration-for-staring-mode-surveillance.html</id><summary type="html">&lt;p&gt;Air to ground data link that was capable of 250 Mbits/sec&lt;/p&gt;</summary><content type="html">&lt;p&gt;This was a fun project! We created a wireless air to ground data link that was
capable of 250 Mbits/sec. The same algorithm and math can be used for pointing
sensors.&lt;/p&gt;
&lt;p&gt;Abstract: Current persistent surveillance approaches require robust designs to
maintain a fixed operational picture. In this paper, we design, develop, and
demonstrate a feasible aimpoint solution. In the design, we derive the
mathematical transformation requirements to show a system-level design. Using
the transformations, we develop an operational methodology for real-time and
robust aimpoint solution that includes a ground antenna, and an aircraft with a
gimbal mounted camera and data link. Finally, we demonstrate a workable
prototype with real-world results. The AIMS methodology supports communication
timing constraints, a closed-loop feedback for error correction, and a succinct,
efficient, and effective method for maintaining persistent surveillance.&lt;/p&gt;
&lt;p&gt;Publicly released source code designed for 32 bit Linux RHEL 5. The code is
simple and should be easily adaptable to any operating system and hardware.&lt;/p&gt;
&lt;p&gt;Links to paper, presentation, and code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1fJwk4RL6R2GIBNObt7Hh85a6j_kHy9IT"&gt;Inexpensive Air To Ground Data Link Presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1jcSl4LCTjcYYHJ9R3n7b3SUf71SapAkH"&gt;Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?id=1-1mJSYSfSbHq-yQ71KyTF5fKoE7b4Anj"&gt;Plane Point Public Released Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry></feed>